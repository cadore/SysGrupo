<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="botaoSair1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAAAZiS0dEAP8A/wD/oL2nkwAAAAd0SU1FB94DBBQ3Kwu2aKAAAAQWSURBVFhHtZg9
        qxVXFIavoChoVPQiBiGNXlBiY2WheBEhEILaBE0hiij6CyRGMZBKsDR1/AOipLRKETGmCCm0EfwAjfkw
        QW0UjUYnz7tmrXHN5znnqg+87DXrY+99ZvbsmTlT41AUhVtmz0cr0Br0GTqIvnLJlk8x5cz3slofb0V0
        RLsUacDv0E00CuUoVzXLcl9zIhdj70d30UuUuYOuoosu2fJlVKPaA97d5BOLAtp16FcUPEaX0T5LGEA5
        nquaQH2t87jlDaIkNM/tneg+Eq/Qt+hjS5wA1Xit+hC/o10em4csr5MI0p5A/yKhX7jNAoDt1mhyLvYs
        eoiE+j7hfou3iACtzkxMRmvC7hRai8+FqKVd4H0KjbEzxyvCQbsWxWVS4RILvEPUp/ctNNZa91vciAPa
        G0joMr31mWkSfalvH0PcyLEKHMcsXBT/oWrNvC80ho8ljrm7BMdK9JeFiuKM+yyW6fKNYqgfjYWExl5p
        TsHBUaTZPkIz7q6BP9pV6Ej2ZVLe52hT9jXBP4M0psY+Gs6F6AISl9xnsSb4P0Rx7Q+52/KlAFu3+Gsk
        Nru7Bv5oL1lWOYeFckwjbVZiu2X1QPyXMq3ipIcq8H2BYhMU+gFLPdyC2A7LKu+4aTl02gzP6YWUfIaE
        Bq4mha3JPFUg0XmGMp4nZnSwp7SLax7vhHi0q9FvKkjoib4F5TPzDNlkaK22D+LXVAB7dfBlaRffe7wX
        cqLdiJqTeuKt0GQ+zTVDkKM3BXFcB6dLuzjn8bEgX2cqnk1NRl6mDPnnyrLi9MQTIs8tsz+xyjrfeLiW
        OwR5tQmNfcky5GsBN1/YgtbdNwT5tUsWi/q6x3shJ9rm3aQ9515pGtXdR2s1Q5BTW9TrS7u/Moewtem1
        7iakHby50GubZx9lqrFeB5NsjHotjQeiqO4mgd11932Nqq+PJsS2W1Y5B9sYJ3l0/GhZb2jdTfh09+XN
        UzvwBx6uwBdt/dHhzsGHKz63zP4ZPUetTS9sWk1Kv/hPtDzHMvjaD1fBgS7bAyQ6Xz/imHYR2pJ9mZS3
        Ca3OviDlxOuHxp42Z4AjXtC0YLe6uwZ+t4bJeX01GgPFzdF6QYs2XmG1A7/vV9jY5duvsHFAqw/DP5C4
        ghZb4B2iPr1vobG6PxzDQbsbvUDiJ7Qgx+dC1Kov71NojN053iICtKdQfJv9g2YtANhujSbnYmvN/I2E
        +j7lfot3omAk0O5Ccfm0+M6iDRacANV4bSxgbQXxKV2N10tOotWauo4CbXg/oHH/bFBu3iTVV7VmpLHJ
        ydh6I9RfKvmxIW4hLdDzLtnyZVSj2oPe3WQTaRLFtMvRYaQ/oZqDdnEbKVc1vbv1nMgdYWsP0YflR0jr
        7BA66ZItn2LKmfAvvamp/wGoUPtpbV9P/gAAAABJRU5ErkJggg==
</value>
  </data>
</root>